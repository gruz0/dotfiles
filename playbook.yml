---

- hosts: localhost
  connection: local
  tasks:
    - name: add HomeBrew custom repos
      homebrew_tap:
        name:
          - homebrew/cask-versions
          - homebrew/cask-fonts

    - name: install brew packages
      homebrew:
        name:
          - coreutils
          - git
          - curl
          - wget
          - gpg2
          - tmux
          - mc
          - ssh-copy-id
          - icu4c
          - reattach-to-user-namespace
          - sqlite
          - neovim/neovim/neovim
          - python3
          - libxml2
          - telnet
          - imagemagick@6
          - v8@3.15
          - zsh
          - tree
          - the_silver_searcher
          - yarn
          - watchman
          - libiconv
          - go
          - golangci/tap/golangci-lint
          - gotags
          - php@7.3
          - php-code-sniffer
          - ctags
          - httpie
          - nmap
          - exa
          - sleepwatcher
          - diff-so-fancy
          - pre-commit
        state: present

    - name: install oh-my-zsh
      git:
        repo: https://github.com/robbyrussell/oh-my-zsh.git
        dest: ~/.oh-my-zsh
        update: no

    - name: add zsh to /etc/shells
      lineinfile:
        dest: /etc/shells
        line: "/usr/local/bin/zsh"
      become: yes

    - name: install oh-my-zsh Docker plugin
      git:
        repo: https://github.com/zsh-users/zsh-docker.git
        dest: ~/.oh-my-zsh/plugins/zsh-docker
        update: no

    - name: install oh-my-zsh autosuggestions plugin
      git:
        repo: https://github.com/zsh-users/zsh-autosuggestions.git
        dest: ~/.oh-my-zsh/plugins/zsh-autosuggestions
        update: no

    - name: cask packages are installed
      homebrew_cask:
        name:
          - iterm2
          - font-fira-code
          - google-chrome
          - opera
          - slack
          - skype
          - discord-ptb
          - tunnelblick
          - vagrant
          - docker-edge
          - kitematic
          - atom
          - calibre
        state: present

    - name: pip packages are installed
      pip:
        name: '{{ item }}'
        state: present
        executable: pip3
        extra_args: --user
      with_items:
        - neovim
        - ansible-vault
        - docker-compose
        - docker-pretty-ps

    # NOTE: Ensure NodeJS 8 already installed from the official website before run this playbook
    - name: npm packages are installed
      npm:
        name: '{{ item }}'
        state: present
        global: yes
      with_items:
        - eslint
        - gitbook-cli

    - name: gpg key for rvm is installed
      shell: gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB
      args:
        creates: ~/.gnupg/trustdb.gpg

    - name: rvm is installed
      shell: curl -sSL https://get.rvm.io | bash -s stable
      args:
        creates: ~/.rvm/scripts/rvm

    # configs

    - name: mac settings are changed
      command: 'defaults write {{ item }}'
      with_items:
        - 'NSGlobalDomain ApplePressAndHoldEnabled 0'
        - 'com.apple.systempreferences TMShowUnsupportedNetworkVolumes 1'
        - 'com.apple.desktopservices DSDontWriteNetworkStores true'
        - 'com.apple.TextEdit RichText 0'
        - 'com.apple.dock autohide -bool true'
        - 'com.apple.finder AppleShowAllFiles true'
        - 'com.apple.finder QuitMenuItem -bool true'
        # Use list view in all Finder windows by default
        - 'com.apple.finder FXPreferredViewStyle -string "Nlsv"'
        # Bottom right screen corner â†’ Start screen saver
        - 'com.apple.dock wvous-br-corner -int 5'
        - 'com.apple.dock wvous-br-modifier -int 0'
        # Set Dock behaviour
        - 'com.apple.dock orientation -string left'
        - 'com.apple.dock autohide-delay -float 0'
        # Safari
        - 'com.apple.Safari AutoOpenSafeDownloads -bool false'
        - 'com.apple.Safari IncludeInternalDebugMenu -bool true'
        # Enable the Develop menu and the Web Inspector in Safari
        - 'com.apple.Safari IncludeDevelopMenu -bool true'
        - 'com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true'
        - 'com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true'
        # Get Dark Menu bar, Dock and Spotlight for macOS Mojave
        - '-g NSRequiresAquaSystemAppearance -bool Yes'
        - 'com.apple.Spotlight NSRequiresAquaSystemAppearance -bool No'
        # Menubar
        - 'com.apple.menuextra.battery ShowPercent -string "YES"'
      changed_when: false

    - name: set config list
      set_fact:
        list:
          - .bundle/config
          - .oh-my-zsh/themes/gruz0.zsh-theme
          - .config/nvim/.keep
          - .ssh
          - .ansible.cfg
          - .bash_profile
          - .ctags
          - .editorconfig
          - .eslintrc
          - .gemrc
          - .gitconfig
          - .gitignore_global
          - .tmux.conf
          - .vimrc
          - .zshrc

    - name: create config dirs
      file: path='~/{{ item | dirname }}' state=directory
      with_items: '{{ list }}'

    - name: create config links
      file:
        src: '{{ playbook_dir }}/assets/{{ item }}'
        dest: '~/{{ item }}'
        state: link
        force: yes
      with_items: '{{ list }}'

    - name: create NeoVim config symlink to Vim config
      file:
        src: '~/.vimrc'
        dest: '~/.config/nvim/init.vim'
        state: link

    - name: install vim-plug for NeoVim
      shell: curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

    - name: Enable `Host` group in SSH config
      lineinfile:
        dest: /etc/ssh/ssh_config
        line: "Host *"
      become: yes

    - name: activate `Ciphers` in SSH config
      lineinfile:
        dest: /etc/ssh/ssh_config
        line: "\tCiphers aes128-ctr,aes192-ctr,aes256-ctr,aes128-cbc,3des-cbc"
      become: yes

    - name: create nmap vulners directory
      file:
        path: ~/Soft/nmap
        state: directory

    - name: install nmap vulners
      git:
        repo: "{{ item['repo'] }}"
        dest: "~/Soft/nmap/{{ item['name'] }}"
        update: yes
      with_items:
        - { name: 'vulscan', repo: 'git@github.com:scipag/vulscan.git' }
        - { name: 'nmap-vulners', repo: 'git@github.com:vulnersCom/nmap-vulners.git' }

    - name: install sleepwatcher-resume.sh
      template:
        src: '{{ playbook_dir }}/assets/sleepwatcher/sleepwatcher-resume.sh.j2'
        dest: /usr/local/bin/sleepwatcher-resume.sh
        mode: 0755
        force: yes

    - name: start sleepwatcher
      shell: |
        launchctl unload -w {{ playbook_dir }}/assets/sleepwatcher/de.bernhard-baehr.sleepwatcher.plist;
        launchctl load -w {{ playbook_dir }}/assets/sleepwatcher/de.bernhard-baehr.sleepwatcher.plist

    - name: install go dependencies
      shell: go get {{ item }}
      with_items:
        - github.com/fzipp/gocyclo
        - github.com/golang/lint/golint
        - github.com/jingyugao/rowserrcheck
        - github.com/uudashr/gocognit/cmd/gocognit
        - github.com/client9/misspell/cmd/misspell
